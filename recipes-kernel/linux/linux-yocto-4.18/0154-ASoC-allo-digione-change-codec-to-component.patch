From 949433f1341d6423c0dae3ab931590ec9e0f508b Mon Sep 17 00:00:00 2001
From: popcornmix <popcornmix@gmail.com>
Date: Thu, 14 Jun 2018 16:05:16 +0100
Subject: [PATCH 154/220] ASoC: allo-digione: change codec to component

Signed-off-by: popcornmix <popcornmix@gmail.com>
---
 sound/soc/bcm/allo-digione.c | 24 ++++++++++++------------
 1 file changed, 12 insertions(+), 12 deletions(-)

diff --git a/sound/soc/bcm/allo-digione.c b/sound/soc/bcm/allo-digione.c
index 9387b05..c78dd0a 100644
--- a/sound/soc/bcm/allo-digione.c
+++ b/sound/soc/bcm/allo-digione.c
@@ -62,10 +62,10 @@ static uint32_t snd_allo_digione_enable_clock(int sample_rate)
 
 static int snd_allo_digione_init(struct snd_soc_pcm_runtime *rtd)
 {
-	struct snd_soc_codec *codec = rtd->codec;
+	struct snd_soc_component *component = rtd->codec_dai->component;
 
 	/* enable TX output */
-	snd_soc_update_bits(codec, WM8804_PWRDN, 0x4, 0x0);
+	snd_soc_component_update_bits(component, WM8804_PWRDN, 0x4, 0x0);
 
 	return 0;
 }
@@ -74,9 +74,9 @@ static int snd_allo_digione_startup(struct snd_pcm_substream *substream)
 {
 	/* turn on digital output */
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
-	struct snd_soc_codec *codec = rtd->codec;
+	struct snd_soc_component *component = rtd->codec_dai->component;
 
-	snd_soc_update_bits(codec, WM8804_PWRDN, 0x3c, 0x00);
+	snd_soc_component_update_bits(component, WM8804_PWRDN, 0x3c, 0x00);
 	return 0;
 }
 
@@ -86,9 +86,9 @@ static void snd_allo_digione_shutdown(struct snd_pcm_substream *substream)
 	if (auto_shutdown_output) {
 		/* turn off output */
 		struct snd_soc_pcm_runtime *rtd = substream->private_data;
-		struct snd_soc_codec *codec = rtd->codec;
+		struct snd_soc_component *component = rtd->codec_dai->component;
 
-		snd_soc_update_bits(codec, WM8804_PWRDN, 0x3c, 0x3c);
+		snd_soc_component_update_bits(component, WM8804_PWRDN, 0x3c, 0x3c);
 	}
 }
 
@@ -97,7 +97,7 @@ static int snd_allo_digione_hw_params(struct snd_pcm_substream *substream,
 {
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
 	struct snd_soc_dai *codec_dai = rtd->codec_dai;
-	struct snd_soc_codec *codec = rtd->codec;
+	struct snd_soc_component *component = rtd->codec_dai->component;
 	struct snd_soc_dai *cpu_dai = rtd->cpu_dai;
 
 	int sysclk = 27000000; /* This is fixed on this board */
@@ -137,7 +137,7 @@ static int snd_allo_digione_hw_params(struct snd_pcm_substream *substream,
 		sampling_freq = 0x0e;
 		break;
 	default:
-		dev_err(codec->dev,
+		dev_err(rtd->card->dev,
 		"Failed to set WM8804 SYSCLK, unsupported samplerate %d\n",
 		samplerate);
 	}
@@ -149,19 +149,19 @@ static int snd_allo_digione_hw_params(struct snd_pcm_substream *substream,
 					sysclk, SND_SOC_CLOCK_OUT);
 
 	if (ret < 0) {
-		dev_err(codec->dev,
+		dev_err(rtd->card->dev,
 		"Failed to set WM8804 SYSCLK: %d\n", ret);
 		return ret;
 	}
 
 	/* Enable TX output */
-	snd_soc_update_bits(codec, WM8804_PWRDN, 0x4, 0x0);
+	snd_soc_component_update_bits(component, WM8804_PWRDN, 0x4, 0x0);
 
 	/* Power on */
-	snd_soc_update_bits(codec, WM8804_PWRDN, 0x9, 0);
+	snd_soc_component_update_bits(component, WM8804_PWRDN, 0x9, 0);
 
 	/* set sampling frequency status bits */
-	snd_soc_update_bits(codec, WM8804_SPDTX4, 0x0f, sampling_freq);
+	snd_soc_component_update_bits(component, WM8804_SPDTX4, 0x0f, sampling_freq);
 
 	return snd_soc_dai_set_bclk_ratio(cpu_dai, 64);
 }
-- 
1.9.1

