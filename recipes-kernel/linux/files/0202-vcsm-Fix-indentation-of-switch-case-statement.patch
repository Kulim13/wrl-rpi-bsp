From 4835d7fe8b81cd2167dabe7f19058fc090b88327 Mon Sep 17 00:00:00 2001
From: Dave Stevenson <dave.stevenson@raspberrypi.org>
Date: Fri, 1 Sep 2017 17:29:37 +0100
Subject: [PATCH 202/215] vcsm: Fix indentation of switch/case statement.

Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.org>
---
 drivers/char/broadcom/vc_sm/vmcs_sm.c | 53 ++++++++++++++++++-----------------
 1 file changed, 27 insertions(+), 26 deletions(-)

diff --git a/drivers/char/broadcom/vc_sm/vmcs_sm.c b/drivers/char/broadcom/vc_sm/vmcs_sm.c
index f93f18d..9627a2b 100644
--- a/drivers/char/broadcom/vc_sm/vmcs_sm.c
+++ b/drivers/char/broadcom/vc_sm/vmcs_sm.c
@@ -2940,33 +2940,34 @@ static long vc_sm_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
 			}
 			for (i=0; i<sizeof ioparam.s/sizeof *ioparam.s; i++) {
 				switch (ioparam.s[i].cmd) {
-					default: case 0: break; /* NOOP */
-					case 1:	/* L1/L2 invalidate virtual range */
-					case 2: /* L1/L2 clean physical range */
-					case 3: /* L1/L2 clean+invalidate all */
-					{
-						/* Locate resource from GUID. */
-						resource =
-						    vmcs_sm_acquire_resource(file_data, ioparam.s[i].handle);
-
-						if ((resource != NULL) && resource->res_cached) {
-							unsigned long base = ioparam.s[i].addr & ~(PAGE_SIZE-1);
-							unsigned long end = (ioparam.s[i].addr + ioparam.s[i].size + PAGE_SIZE-1) & ~(PAGE_SIZE-1);
-
-							resource->res_stats[ioparam.s[i].cmd == 1 ? INVALID:FLUSH]++;
-
-							/* L1/L2 cache flush */
-							down_read(&current->mm->mmap_sem);
-							vcsm_vma_cache_clean_page_range(base, end);
-							up_read(&current->mm->mmap_sem);
-						} else if (resource == NULL) {
-							ret = -EINVAL;
-							goto out;
-						}
-
-						if (resource)
-							vmcs_sm_release_resource(resource, 0);
+				default:
+				case 0:
+					break; /* NOOP */
+				case 1:	/* L1/L2 invalidate virtual range */
+				case 2: /* L1/L2 clean physical range */
+				case 3: /* L1/L2 clean+invalidate all */
+					/* Locate resource from GUID. */
+					resource =
+					    vmcs_sm_acquire_resource(file_data, ioparam.s[i].handle);
+
+					if ((resource != NULL) && resource->res_cached) {
+						unsigned long base = ioparam.s[i].addr & ~(PAGE_SIZE-1);
+						unsigned long end = (ioparam.s[i].addr + ioparam.s[i].size + PAGE_SIZE-1) & ~(PAGE_SIZE-1);
+
+						resource->res_stats[ioparam.s[i].cmd == 1 ? INVALID:FLUSH]++;
+
+						/* L1/L2 cache flush */
+						down_read(&current->mm->mmap_sem);
+						vcsm_vma_cache_clean_page_range(base, end);
+						up_read(&current->mm->mmap_sem);
+					} else if (resource == NULL) {
+						ret = -EINVAL;
+						goto out;
 					}
+
+					if (resource)
+						vmcs_sm_release_resource(resource, 0);
+
 					break;
 				}
 			}
-- 
1.9.1

